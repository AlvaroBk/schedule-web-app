name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setting up .env
        run: |
          echo "${{ secrets.SCHEDULE_PRODUCTION_ENV }}" > .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate timestamp-based tag
        id: tag
        run: echo "TIMESTAMP_TAG=$(date +'%y%m%d')" >> $GITHUB_ENV

      - name: Build Docker image (Laravel)
        run: |
          docker build --no-cache -t alvarobk/scheduleapp:${{ env.TIMESTAMP_TAG }} .

      - name: Build Docker image (Nginx)
        run: |
          docker build --no-cache -t alvarobk/schedulenginx:${{ env.TIMESTAMP_TAG }} ./docker/nginx

      - name: Scan Laravel Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: alvarobk/scheduleapp:${{ env.TIMESTAMP_TAG }}
          format: 'table'
          vuln-type: 'os,library'
          severity: 'MEDIUM,HIGH,CRITICAL'
          scanners: 'vuln'  # Disable secret scanning

      - name: Scan Nginx Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: alvarobk/schedulenginx:${{ env.TIMESTAMP_TAG }}
          format: 'table'
          vuln-type: 'os,library'
          severity: 'MEDIUM,HIGH,CRITICAL'
          scanners: 'vuln'  # Disable secret scanning

      - name: Docker push images
        run: |
          docker push alvarobk/scheduleapp:${{ env.TIMESTAMP_TAG }}
          docker push alvarobk/schedulenginx:${{ env.TIMESTAMP_TAG }}

  sast_checks:
    name: SAST Checks for JavaScript and PHP
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Build and run Docker container for SAST checks
        run: |
          docker build -t sast-checks .
          docker run --rm sast-checks

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript,php"

      # Uncomment the following if you prefer using SonarCloud for comprehensive SAST
      # - name: Set up SonarCloud
      #   uses: sonarsource/sonarcloud-github-action@master
      #   with:
      #     sonar_token: ${{ secrets.SONAR_TOKEN }}

      # - name: Run SonarCloud Scan
      #   run: |
      #     sonar-scanner \
      #     -Dsonar.projectKey=my_project_key \
      #     -Dsonar.organization=my_org \
      #     -Dsonar.host.url=https://sonarcloud.io \
      #     -Dsonar.login=${{ secrets.SONAR_TOKEN }}
